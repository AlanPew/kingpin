{"body":"kingpin\r\n=======\r\n\r\n### A drop-in MKAnnotation clustering library for iOS\r\n\r\n\r\nfeatures\r\n---------\r\n\r\n* Uses a [2-d tree](http://en.wikipedia.org/wiki/K-d_tree) under the hood for maximum performance \r\n* No subclassing required, making the library easy to integrate with existing projects.\r\n\r\n\r\nusage\r\n-----\r\n\r\nCreate an instance of a KPTreeController:\r\n\r\n`self.treeController = [[KPTreeController alloc] initWithMapView:self.mapView]`\r\n\r\nSet the controller's annotations:\r\n\r\n`[self.treeController setAnnotations:[self annotations]];`\r\n\r\nHandle the clusters:\r\n\r\n```\r\n- (MKAnnotationView *)mapView:(MKMapView *)mapView viewForAnnotation:(id<MKAnnotation>)annotation {\r\n    \r\n    KPAnnotation *a = (KPAnnotation *)annotation;\r\n    \r\n    MKPinAnnotationView *v = \r\n      (MKPinAnnotationView *)[mapView dequeueReusableAnnotationViewWithIdentifier:@\"pin\"];\r\n    \r\n    if(!v){\r\n        v = [[MKPinAnnotationView alloc] initWithAnnotation:a reuseIdentifier:@\"pin\"];\r\n    }\r\n    \r\n    v.pinColor = (a.annotations.count > 1 ? MKPinAnnotationColorPurple : MKPinAnnotationColorRed);\r\n    \r\n    return v;\r\n    \r\n}\r\n```\r\n\r\nNote: You can gain access to the cluster's annotations via `-[KPAnnotation annotations]`.\r\n\r\nRefresh visible annotations as needed:\r\n\r\n```\r\n- (void)mapView:(MKMapView *)mapView regionDidChangeAnimated:(BOOL)animated {\r\n    [self.treeController refresh:self.animationSwitch.on];\r\n}\r\n```\r\n\r\nThis is typically done in `-mapView:regionDidChangeAnimated:`\r\n\r\ndemo\r\n----\r\n\r\nCheck out the **tester** target in *kingpin.xcodeproj*\r\n\r\nlicence\r\n--------\r\n\r\nApache 2.0\r\n\r\nauthor\r\n------\r\n\r\nBryan Bonczek (@itsbonczek)\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A drop-in MKAnnotation clustering library for iOS","google":"","name":"Kingpin"}